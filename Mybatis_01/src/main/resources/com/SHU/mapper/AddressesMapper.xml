<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.SHU.mapper.AddressesMapper">

    <!--开启二级缓存-->
    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

    <!--将最常用的列抽取成SQL片段，被别人引用-->
    <sql id="baseColumn">
        country,state,city
    </sql>
    <!--
        功能：根据传入的对象动态的修改其中的值，
        如果某个字段传入的非空值，再去修改，否则不修改
        where后面条件使用ID作为条件
    -->
    <!--set只能处理后置的','-->
    <update id="update" parameterType="com.SHU.pojo.Addresses">
        update addresses
        <set>
            <if test="city!=null and city !=''">
                city = #{city},
            </if>
            <if test="country!=null and country !=''">
                country = #{country},
            </if>
            <if test="state!=null and state !=''">
                state = #{state},
            </if>
            <if test="street!=null and street !=''">
                street = #{street},
            </if>
            <if test="zip!=null and zip !=''">
                zip = #{zip}
            </if>
        </set>
        <where>
            ADDR_ID=#{addrId}
        </where>
    </update>


    <select id="queryById" resultType="com.SHU.pojo.Addresses">
        select * from addresses where ADDR_ID = #{addrId}
    </select>

    <!--mybatis 推出了where标签来进行解决
        可以自动消除多余的and，只能处理前置的and，and不能写在后面-->
    <!--希望if处理多个判断条件的时候，条件语句可以用and连接-->
    <select id="queryByCountryCity" resultType="com.SHU.pojo.Addresses">

        select * from addresses
        <where>
            <if test="city !=null and city !=''">
                and
                city = #{city}
            </if>
            <if test="country !=null">
                and
                country = #{country}
            </if>
        </where>

    </select>
    <!--parameterType是入参的类型，大部分情况Mybatis可以自行判断-->
    <select id="query" resultType="com.SHU.pojo.Addresses" parameterType="com.SHU.pojo.Addresses">
        select * from addresses
        <where>
            <choose>
                <when test="country!=null">
                    and country = #{country}
                </when>
                <when test="state!=null ">
                    and state = #{state}
                </when>
                <otherwise>
                    and city=#{city}
                </otherwise>
            </choose>
        </where>
    </select>
    <select id="queryTrim" resultType="com.SHU.pojo.Addresses" parameterType="com.SHU.pojo.Addresses">
        select * from addresses
        <trim prefix="where" suffixOverrides="AND">
            <if test="city!=null and city !=''">
                city = #{city} and
            </if>
            <if test="country!=null and country !=''">
                country = #{country} and
            </if>
            <if test="state!=null and state !=''">
                state = #{state} and
            </if>
            <if test="street!=null and street !=''">
                street = #{street} and
            </if>
            <if test="zip!=null and zip !=''">
                zip = #{zip} and
            </if>
        </trim>
    </select>
    <!--foreach用于描述集合list set map
        open    是后面的SQL语句的拼接以什么开头
        close   是以什么结尾
        item    是数据项的一个代号
        separator  item之间的分隔符
        index   在需要使用标号时使用
    -->
    <select id="queryIds" resultType="com.SHU.pojo.Addresses">
        select * from addresses
        <where>
            addr_id in
            <foreach collection="list" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </where>
    </select>
    <!--#表达式不支持拼接%-->
    <!--解决方案二：CITY like concat('%',#{city},'%')-->
    <select id="queryLike" resultType="com.SHU.pojo.Addresses">
        <bind name="_city" value="'%'+city+'%'"></bind>
        select * from addresses
        where
        CITY like #{_city}
    </select>
    <select id="listAll" resultType="com.SHU.pojo.Addresses">
        select
        <include refid="baseColumn"/>
        from addresses
    </select>

</mapper>